apply plugin: 'java'
apply plugin: 'idea'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'com.google.guava:guava:18.0'
    compile 'io.netty:netty-all:4.0.30.Final'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'com.ning:async-http-client:1.9.36'

    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'org.powermock:powermock-module-junit4:1.5.4'
    testCompile 'org.powermock:powermock-api-mockito:1.5.4'
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
    afterSuite { desc, result ->
        if (!desc.parent) { // will match the outermost suite
            println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
        }
    }
}

task seeder(type: Jar, dependsOn: 'compileJava') {
    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)
    from { configurations.compile.collect { zipTree(it) } }

    manifest {
        attributes 'Main-Class': 'com.worldwar.application.Seeder'
    }
}

idea.workspace.iws.withXml { provider ->
    provider.node.component
            .find { it.@name == 'ProjectView' }
            .panes
            .pane.find { it.@id == 'ProjectPane'}
            .appendNode('option', [name: 'show-excluded-files', value: false])
}